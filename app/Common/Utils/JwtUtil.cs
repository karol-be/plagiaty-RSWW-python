using System;
using System.Collections.Generic;
using System.IdentityModel.Tokens.Jwt;
using System.Linq;
using System.Security.Claims;

namespace Common.Utils
{
    public class JwtUtil
    {
        /// <summary>
        ///     Extracts model from jwt token
        /// </summary>
        /// <param name="token">JWT token generated by IdentityService</param>
        /// <returns>Model with data passed through jwt</returns>
        public static JwtModel GetUserIdFromToken(string token)
        {
            if (string.IsNullOrEmpty(token))
            {
                throw new UnauthorizedAccessException();
            }

            token = RemoveBearer(token);

            var readToken = new JwtSecurityTokenHandler().ReadJwtToken(token);
            var claims = (List<Claim>) readToken.Claims;
            return new JwtModel()
            {
                UserId = Guid.Parse(claims.First(c => c.Type.Equals("sub")).Value),
                Login = claims.First(c => c.Type.Equals("login")).Value
            };
        }

        private static string RemoveBearer(string token)
        {
            const string bearer = "Bearer ";
            return token.Contains(bearer) ? token.Substring(bearer.Length) : token;
        }
    }
}